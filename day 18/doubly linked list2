#include<iostream>
#include<bits/stdc++.h>
using namespace std;

class node{
public:
    int data;
    node*next;
    node*prev;

    node(int val){
    data=val;
    next=NULL;
    prev=NULL;
    }


};
void insertAtHead(node*&head, int val)
{
    node*n=new node(val);
    n->next=head;
    if(head!=NULL){
        head->prev=n;
    }
    head=n;
}
void insertAtTail(node* &head, int val)
{
    if(head==NULL){
        insertAtHead(head, val);
        return;
    }
    node*temp=head;
    node*n=new node(val);
    while(temp->next!=NULL){
        temp=temp->next;
    }
    temp->next=n;
    n->prev=temp;
}

void deleteAtHead(node*&head)
{
    node *todelete=head;
    head=head->next;
    head->prev=NULL;
    delete(todelete);
}

void deletion(node*&head, int pos)
{
    if(pos==1)
    {
        deleteAtHead(head);
    }
    node*temp=head;
    int c=1;
    while(temp!=NULL&&c!=pos)
    {
        temp=temp->next;
        c++;
    }
    temp->prev->next=temp->next;
    if(temp->next!=NULL){
        temp->next->prev=temp->prev;
    }
    delete(temp);
}

void display(node *&head)
{
    node*temp=head;
    while(temp!=NULL){
        cout<<temp->data<<"->";
        temp=temp->next;

    }
    cout<<"NULL"<<endl;
}

int main()
{
    node*head=NULL;
    insertAtTail(head, 1);
    insertAtTail(head, 2);
    insertAtTail(head, 4);
    insertAtTail(head, 6);
    display(head);
    deletion(head, 3);
    cout<<"after deleting: ";
    display(head);
    return 0;
}
