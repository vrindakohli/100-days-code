#include<iostream>
#include<bits/stdc++.h>
using namespace std;

struct node
{

    int data;
    node* next;

    };

//insert at tail
void insertAtTail(node**head, int val)
{
    if(*head == NULL){
		*head = new node;
		(*head)->data = val;
		(*head)->next = NULL;
		return;
	}
	node *temp = new node;
	temp->data = (*head)->data;
	temp->next = (*head)->next;
	(*head)->data=val;
	(*head)->next=temp;
}
node *mergeLL(node*first, node*second)
{
    node *merged=new node;
    node* temp=new node;
    merged=temp;
    while(first!=NULL&&second!=NULL)
    {
        if(first->data<=second->data){
            temp->next=first;
            first=first->next;
        }
        else{
            temp->next=second;
            second=second->next;
        }
        temp=temp->next;
    }
    while(first!=NULL){
        temp->next=first;
        first=first->next;
        temp=temp->next;
    }
    while(second!=NULL){
        temp->next=second;
        second=second->next;
        temp=temp->next;
    }
    return merged->next;
}

node*middle(node*&head)
{
    node*slow=head;
    node*fast=head->next;
    while(slow->next!=NULL&&(fast!=NULL&&fast->next!=NULL)){
        slow=slow->next;
        fast=fast->next->next;
    }
    return slow;
}

node*Mergesort(node*&head)
{
    if(head->next==NULL){
        return head;
    }
    node *mid;
    node *head2;
    mid=middle(head);
    head2=mid->next;
    mid->next=NULL;
    node *finalhead=mergeLL(Mergesort(head), Mergesort(head2));
    return finalhead;
}

void display(node *head)
{
    node*temp=head;
    while(temp!=NULL){
        cout<<temp->data<<"->";
        temp=temp->next;
    }
    cout<<"NULL";
}



int main()
{
    node* head=NULL;
    int arr[]={4,3,6,1,2,8,7};
    for(int i=0;i<7;i++){
        insertAtTail(&head, arr[i]);
    }
    display(head);
    cout<<endl<<"sorted LL: ";
    display(Mergesort(head));

    return 0;
}

