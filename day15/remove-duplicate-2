
#include<iostream>
#include<bits/stdc++.h>
using namespace std;

class node
{
public:
    int data;
    node* next;

    node(int val){
    data=val;
    next=NULL;
    }
};

//insert at tail
void insertAtTail(node* &head, int val)
{
    node* n= new node(val);
    if(head==NULL){
        head=n;
    }
    else{
        node *temp= head;
        while(temp->next!=NULL){
            temp=temp->next;
        }
        temp->next=n;
    }
}

void removeDuplicate(node* &head)
{
    unordered_set<int> setLL;
     node * curr=head;
     node *prev=NULL;
     while(curr!=NULL){
        if(setLL.find(curr->data)!=setLL.end()){
            prev->next=curr->next;
            delete(curr);
        }
        else{
            setLL.insert(curr->data);
            prev=curr;
        }
        curr=prev->next;
     }
}



void display(node *head)
{
    node*temp=head;
    while(temp!=NULL){
        cout<<temp->data<<"->";
        temp=temp->next;
    }
    cout<<"NULL"<<endl;
}



int main()
{
    node* head=NULL;
    insertAtTail(head, 1);
    insertAtTail(head, 1);
    insertAtTail(head, 5);

    insertAtTail(head, 3);
    insertAtTail(head, 3);
    insertAtTail(head, 1);

    insertAtTail(head, 5);
    display(head);
    removeDuplicate(head);
    cout<<"after removing: ";
    display(head);

    return 0;
}

