//Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.



#include<bits/stdc++.h>
using namespace std;

int main()
{
    vector<vector<int>> intervals={{1,3}, {8,10}, {2,6}, {15,18}} ;
    sort(intervals.begin(), intervals.end());
    vector<vector<int>> merged;
        for(auto i : intervals){
            if(merged.empty()||merged.back()[1]<i[0]){
                merged.push_back(i);
            }
            else{
                merged.back()[1]=max(merged.back()[1], i[1]);

            }
        }

        for(int i=0; i<merged.size();i++){
            for(int j=0;j<merged[i].size();j++){
                cout<<merged[i][j]<<" ";
            }
            cout<<endl;
        }
        return 0;

}
