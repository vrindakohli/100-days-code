//Reverse a Linked List in groups of given size. 

#include<iostream>
#include<bits/stdc++.h>
using namespace std;

class node
{
public:
    int data;
    node* next;

    node(int val){
    data=val;
    next=NULL;
    }
};

//insert at tail
void insertAtTail(node* &head, int val)
{
    node* n= new node(val);
    if(head==NULL){
        head=n;
    }
    else{
        node *temp= head;
        while(temp->next!=NULL){
            temp=temp->next;
        }
        temp->next=n;
    }
}


void display(node *head)
{
    node*temp=head;
    while(temp!=NULL){
        cout<<temp->data<<"->";
        temp=temp->next;
    }
    cout<<"NULL";
}

node *rev(node* &head, int k)
{
    node *prev=NULL;
    node *curr= head;
    node *nextptr;
    int c=0;
    while(curr!=NULL&&c<k)
    {
        nextptr=curr->next;
        curr->next=prev;
        prev=curr;
        curr=nextptr;
        c++;
    }
    if(nextptr!=NULL){
        head->next=rev(nextptr,k);
    }
    return prev;
}


int main()
{
    int k;
    node* head=NULL;
    insertAtTail(head, 1);
    insertAtTail(head, 2);
    insertAtTail(head, 3);
    insertAtTail(head, 5);
    insertAtTail(head, 7);
    insertAtTail(head, 9);


    display(head);
    cout<<endl<<"enter k";
    cin>>k;
    cout<<endl<<"after rotation: ";
    node* newhead= rev(head, k);
    display(newhead);
    return 0;
}
